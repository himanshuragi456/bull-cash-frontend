/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CircleLocker,
  CircleLockerInterface,
} from "../../../contracts/Locker.sol/CircleLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockDate",
        type: "uint256",
      },
    ],
    name: "LockAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "LockDescriptionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "LockOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unlockedAt",
        type: "uint256",
      },
    ],
    name: "LockRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newUnlockDate",
        type: "uint256",
      },
    ],
    name: "LockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LockVested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "WithdrawBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allLpTokenLockedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allNormalTokenLockedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cumulativeLockInfo",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newUnlockDate",
        type: "uint256",
      },
    ],
    name: "editLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "editLockDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getCumulativeLpTokenLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct CircleLocker.CumulativeLockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCumulativeLpTokenLockInfoAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct CircleLocker.CumulativeLockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getCumulativeNormalTokenLockInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct CircleLocker.CumulativeLockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getCumulativeNormalTokenLockInfoAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct CircleLocker.CumulativeLockInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getLockAt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "getLockById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getLocksForToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalLockCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLpToken",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockDate",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "lpLockCountForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "lpLockForUserAtIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "lpLocksForUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLpToken",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "tgeDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tgeBps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycleBps",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "multipleVestingLock",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "normalLockCountForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "normalLockForUserAtIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "normalLocksForUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tgeBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycleBps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockedAmount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct CircleLocker.Lock[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "renounceLockOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "totalLockCountForToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "totalLockCountForUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokenLockedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferLockOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isLpToken",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tgeDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tgeBps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycleBps",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "vestingLock",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "withdrawableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d3362000023565b62000073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613d6880620000836000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063a57e31411161011a578063d3cac885116100ad578063e3676f881161007c578063e3676f8814610495578063eb80bdae146104a8578063eeacf786146104bb578063f2fde38b146104ce578063fd981c66146104e157600080fd5b8063d3cac885146103ed578063da1d8cff14610400578063e0da83ce14610413578063e1444fd61461043357600080fd5b8063b982922e116100e9578063b982922e146103ac578063cb645e32146103b4578063cd83eadc146103c7578063ceac4c05146103da57600080fd5b8063a57e314114610360578063aec640c614610373578063aef0e54014610386578063b3b9aa481461039957600080fd5b8063618df7a31161019257806376c128221161016157806376c12822146102f25780637e6706d3146103125780638da5cb5b14610332578063a20b8c181461034d57600080fd5b8063618df7a3146102b15780636198e339146102c45780636dbdeab3146102d7578063715018a6146102ea57600080fd5b80631982242c116101ce5780631982242c1461026c578063332f26d714610274578063475831c8146102945780635a04fb691461029c57600080fd5b8063072793571461020057806307873ef11461022657806308f12470146102395780630d4f581a14610259575b600080fd5b61021361020e3660046133c7565b6104e9565b6040519081526020015b60405180910390f35b61021361023436600461344d565b61062e565b61024c61024736600461346a565b610655565b60405161021d919061357e565b61024c61026736600461346a565b6107a7565b6102136107c2565b610287610282366004613591565b6107e3565b60405161021d91906135c6565b61021361092a565b6102af6102aa366004613628565b610936565b005b61024c6102bf366004613658565b610ac9565b6102af6102d236600461346a565b610b3e565b6102136102e536600461346a565b610bc7565b6102af610bde565b610305610300366004613684565b610bf2565b60405161021d91906136a6565b61032561032036600461346a565b610d48565b60405161021d9190613716565b6000546040516001600160a01b03909116815260200161021d565b61032561035b36600461346a565b610dbf565b6102af61036e36600461346a565b610deb565b610305610381366004613684565b610df9565b61028761039436600461344d565b610f44565b6102af6103a7366004613745565b61102a565b6102136112c1565b6102136103c2366004613771565b6112cd565b6102136103d536600461344d565b611514565b6102af6103e8366004613658565b611532565b6102af6103fb366004613816565b611570565b61028761040e36600461344d565b611620565b6104266104213660046138a7565b6116fe565b60405161021d9190613985565b61046f61044136600461344d565b6008602052600090815260409020805460018201546002909201546001600160a01b03918216929091169083565b604080516001600160a01b0394851681529390921660208401529082015260600161021d565b6102136104a336600461344d565b61190d565b6102136104b636600461344d565b61192e565b61024c6104c9366004613658565b61194f565b6102af6104dc36600461344d565b6119c4565b600154610213565b60006001600160a01b03861661051a5760405162461bcd60e51b8152600401610511906139bd565b60405180910390fd5b6000841161056a5760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742073686f756c642062652067726561746572207468616e2030006044820152606401610511565b4283116105c55760405162461bcd60e51b815260206004820152602360248201527f556e6c6f636b20646174652073686f756c6420626520696e207468652066757460448201526275726560e81b6064820152608401610511565b6105d8878787878760008060008a611a3a565b90506105e686333087611a86565b807f694af1cc8727cdd0afbdd53d9b87b69248bd490224e9dd090e788546506e076f8789878760405161061c94939291906139e4565b60405180910390a29695505050505050565b6001600160a01b038116600090815260026020526040812061064f90611bdb565b92915050565b61065d61327b565b600161066883611be5565b8154811061067857610678613a0d565b60009182526020918290206040805161016081018252600b9093029091018054835260018101546001600160a01b03908116948401949094526002810154909316908201526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a820180549192916101408401919061071e90613a23565b80601f016020809104026020016040519081016040528092919081815260200182805461074a90613a23565b80156107975780601f1061076c57610100808354040283529160200191610797565b820191906000526020600020905b81548152906001019060200180831161077a57829003601f168201915b5050505050815250509050919050565b6107af61327b565b6001828154811061067857610678613a0d565b60006107cc61092a565b6107d46112c1565b6107de9190613a73565b905090565b6001600160a01b038316600090815260096020526040902060609061080790611bdb565b821061083e576001600160a01b038416600090815260096020526040902060019061083190611bdb565b61083b9190613a86565b91505b600061084a8484613a86565b610855906001613a73565b90506000816001600160401b0381111561087157610871613325565b6040519080825280602002602001820160405280156108aa57816020015b61089761327b565b81526020019060019003908161088f5790505b5090506000855b85811161091c576001600160a01b03881660009081526009602052604090206108de906102479083611c81565b8383815181106108f0576108f0613a0d565b6020026020010181905250818061090690613a99565b925050808061091490613a99565b9150506108b1565b5090925050505b9392505050565b60006107de6006611bdb565b8161094081611be5565b506000600161094e85611be5565b8154811061095e5761095e613a0d565b60009182526020909120600b9091020160028101549091506001600160a01b031633811461099e5760405162461bcd60e51b815260040161051190613ab2565b6002820180546001600160a01b0319166001600160a01b0386811691909117909155600180840154821660009081526008602052604090209081015490911615801590610a30576001600160a01b0383166000908152600260205260409020610a079088611c8d565b506001600160a01b0386166000908152600260205260409020610a2a9088611c99565b50610a77565b6001600160a01b0383166000908152600360205260409020610a529088611c8d565b506001600160a01b0386166000908152600360205260409020610a759088611c99565b505b604080518881526001600160a01b03858116602083015288168183015290517f9075ad040756c0d8743a1fed927066a92c4755071615bf61e04b17583d961caf9181900360600190a150505050505050565b610ad161327b565b81610adb8461192e565b11610b185760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610511565b6001600160a01b0383166000908152600360205260409020610923906102479084611c81565b80610b4881611be5565b5060006001610b5684611be5565b81548110610b6657610b66613a0d565b600091825260209091206002600b90920201908101549091506001600160a01b03163314610ba65760405162461bcd60e51b815260040161051190613ab2565b600681015415610bbe57610bb981611ca5565b505050565b610bb98161203a565b600080610bd383610655565b90506109238161225c565b610be6612370565b610bf060006123ca565b565b6060610bfe6006611bdb565b8210610c1d576001610c106006611bdb565b610c1a9190613a86565b91505b6000610c298484613a86565b610c34906001613a73565b90506000816001600160401b03811115610c5057610c50613325565b604051908082528060200260200182016040528015610c9b57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610c6e5790505b5090506000855b858111610d3d5760086000610cb8600684611c81565b6001600160a01b03908116825260208083019390935260409182016000208251606081018452815483168152600182015490921693820193909352600290920154908201528351849084908110610d1157610d11613a0d565b60200260200101819052508180610d2790613a99565b9250508080610d3590613a99565b915050610ca2565b509095945050505050565b604080516060810182526000808252602082018190529181019190915260086000610d74600685611c81565b6001600160a01b039081168252602080830193909352604091820160002082516060810184528154831681526001820154909216938201939093526002909201549082015292915050565b604080516060810182526000808252602082018190529181019190915260086000610d74600485611c81565b610df6816000610936565b50565b6060610e056004611bdb565b8210610e24576001610e176004611bdb565b610e219190613a86565b91505b6000610e308484613a86565b610e3b906001613a73565b90506000816001600160401b03811115610e5757610e57613325565b604051908082528060200260200182016040528015610ea257816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610e755790505b5090506000855b858111610d3d5760086000610ebf600484611c81565b6001600160a01b03908116825260208083019390935260409182016000208251606081018452815483168152600182015490921693820193909352600290920154908201528351849084908110610f1857610f18613a0d565b60200260200101819052508180610f2e90613a99565b9250508080610f3c90613a99565b915050610ea9565b6001600160a01b038116600090815260026020526040812060609190610f6990611bdb565b90506000816001600160401b03811115610f8557610f85613325565b604051908082528060200260200182016040528015610fbe57816020015b610fab61327b565b815260200190600190039081610fa35790505b50905060005b82811015611022576001600160a01b0385166000908152600260205260409020610ff2906102479083611c81565b82828151811061100457611004613a0d565b6020026020010181905250808061101a90613a99565b915050610fc4565b509392505050565b8261103481611be5565b506000600161104286611be5565b8154811061105257611052613a0d565b600091825260209091206002600b90920201908101549091506001600160a01b031633146110925760405162461bcd60e51b815260040161051190613ab2565b6009810154156110d85760405162461bcd60e51b8152602060048201526011602482015270131bd8dac81dd85cc81d5b9b1bd8dad959607a1b6044820152606401610511565b821561117957806005015483101580156110f157504283115b6111715760405162461bcd60e51b8152602060048201526044602482018190527f4e657720756e6c6f636b2074696d652073686f756c64206e6f74206265206265908201527f666f7265206f6c6420756e6c6f636b2074696d65206f722063757272656e742060648201526374696d6560e01b608482015260a401610511565b600581018390555b831561125d5780600301548410156111ed5760405162461bcd60e51b815260206004820152603160248201527f4e657720616d6f756e742073686f756c64206e6f74206265206c657373207468604482015270185b8818dd5c9c995b9d08185b5bdd5b9d607a1b6064820152608401610511565b60008160030154856111ff9190613a86565b9050801561125b576003820185905560018201546001600160a01b03166000908152600860205260409020600281015461123a908390613a73565b60028201556001830154611259906001600160a01b0316333085611a86565b505b505b805460018201546002830154600384015460058501546040517fa8b26360df8d5e154ffa5a8a7e894e85f781acfbbef0b744fb9551d8fd0fd36c946112b2946001600160a01b039182169491169290916139e4565b60405180910390a25050505050565b60006107de6004611bdb565b60006001600160a01b0389166112f55760405162461bcd60e51b8152600401610511906139bd565b600087116113455760405162461bcd60e51b815260206004820152601f60248201527f416d6f756e742073686f756c642062652067726561746572207468616e2030006044820152606401610511565b4286116113945760405162461bcd60e51b815260206004820181905260248201527f54474520646174652073686f756c6420626520696e20746865206675747572656044820152606401610511565b600084116113d45760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206379636c6560981b6044820152606401610511565b6000851180156113e5575061271085105b6114285760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206269707320666f722054474560601b6044820152606401610511565b600083118015611439575061271083105b61147e5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206269707320666f72206379636c6560501b6044820152606401610511565b61271061148b8487613a73565b11156114a95760405162461bcd60e51b815260040161051190613af4565b6114ba8a8a8a8a8a8a8a8a8a611a3a565b90506114c88933308a611a86565b807f694af1cc8727cdd0afbdd53d9b87b69248bd490224e9dd090e788546506e076f8a8c8a8a6040516114fe94939291906139e4565b60405180910390a25b9998505050505050505050565b600061151f8261062e565b6115288361192e565b61064f9190613a73565b61153a612370565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610bb9573d6000803e3d6000fd5b8161157a81611be5565b506000600161158885611be5565b8154811061159857611598613a0d565b600091825260209091206002600b90920201908101549091506001600160a01b031633146115d85760405162461bcd60e51b815260040161051190613ab2565b600a81016115e68482613b8c565b506040518481527fe4a1120fd509c50aec65802fd3c3c9a4b72bf746fe9a552396185c6de928e8aa9060200160405180910390a150505050565b6001600160a01b03811660009081526003602052604081206060919061164590611bdb565b90506000816001600160401b0381111561166157611661613325565b60405190808252806020026020018201604052801561169a57816020015b61168761327b565b81526020019060019003908161167f5790505b50905060005b82811015611022576001600160a01b03851660009081526003602052604090206116ce906102479083611c81565b8282815181106116e0576116e0613a0d565b602002602001018190525080806116f690613a99565b9150506116a0565b60606001600160a01b0388166117265760405162461bcd60e51b8152600401610511906139bd565b8a89146117695760405162461bcd60e51b815260206004820152601160248201527013195b99dd1a081b5a5cdb585d18da1959607a1b6044820152606401610511565b4286116117b85760405162461bcd60e51b815260206004820181905260248201527f54474520646174652073686f756c6420626520696e20746865206675747572656044820152606401610511565b600084116117f85760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206379636c6560981b6044820152606401610511565b600085118015611809575061271085105b61184c5760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964206269707320666f722054474560601b6044820152606401610511565b60008311801561185d575061271083105b6118a25760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206269707320666f72206379636c6560501b6044820152606401610511565b6127106118af8487613a73565b11156118cd5760405162461bcd60e51b815260040161051190613af4565b6118fd8c8c8c8c8c8c60405180608001604052808e81526020018d81526020018c81526020018b8152508961241a565b9c9b505050505050505050505050565b6001600160a01b038116600090815260096020526040812061064f90611bdb565b6001600160a01b038116600090815260036020526040812061064f90611bdb565b61195761327b565b816119618461062e565b1161199e5760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b6044820152606401610511565b6001600160a01b0383166000908152600260205260409020610923906102479084611c81565b6119cc612370565b6001600160a01b038116611a315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610511565b610df6816123ca565b60008715611a68576000611a4d8a612610565b9050611a608b8b838b8b8b8b8b8b612724565b915050611507565b611a788a8a8989898989896127fd565b9a9950505050505050505050565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908616906370a0823190602401602060405180830381865afa158015611ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af49190613c4b565b9050611b0b6001600160a01b0386168585856128cf565b6040516370a0823160e01b81526001600160a01b038481166004830152600091908716906370a0823190602401602060405180830381865afa158015611b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b799190613c4b565b905082611b868383613a86565b14611bd35760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820746f6b656e20776173207472616e736665727265646044820152606401610511565b505050505050565b600061064f825490565b6000620f4240821015611c2c5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081b1bd8dac81a59608a1b6044820152606401610511565b6000611c3b620f424084613a86565b600154909150811061064f5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081b1bd8dac81a59608a1b6044820152606401610511565b60006109238383612940565b6000610923838361296a565b60006109238383612a5d565b60408051610160810182528254815260018301546001600160a01b039081166020830152600284015416918101919091526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008201526009820154610120820152600a82018054600092611dc59290918591610140840191611d3e90613a23565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6a90613a23565b8015611db75780601f10611d8c57610100808354040283529160200191611db7565b820191906000526020600020905b815481529060010190602001808311611d9a57829003601f168201915b50505050508152505061225c565b90506000818360090154611dd99190613a73565b9050600082118015611def575082600301548111155b611e2f5760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b6044820152606401610511565b6001808401546001600160a01b03908116600090815260086020526040902091820154600386015491161515908303611f1c578015611e88578454336000908152600260205260409020611e8291611c8d565b50611ea4565b8454336000908152600360205260409020611ea291611c8d565b505b845460018601546001600160a01b03166000908152600960205260409020611ecb91611c8d565b50845460018601546040517fc6532367992b32e42a62dd89fc3574876d97d081a263aa6e030f34b79b7e6e8b91611f13916001600160a01b03909116903390889042906139e4565b60405180910390a25b83826002015411611f335760006002830155611f49565b838260020154611f439190613a86565b60028301555b8160020154600003611f97578015611f7b576001850154611f75906004906001600160a01b0316612aac565b50611f97565b6001850154611f95906006906001600160a01b0316612aac565b505b6009850183905560028501546001860154611fbf916001600160a01b03918216911686612ac1565b84546001860154600987015460038801547ff93385ffdf40b698b13993c059834b8e91d0ca8e7abf827a34001ca03c03f6ff926001600160a01b0316913391899161200991613a86565b604080516001600160a01b03958616815294909316602085015291830152606082015242608082015260a0016112b2565b806005015442101561208e5760405162461bcd60e51b815260206004820152601860248201527f4974206973206e6f742074696d6520746f20756e6c6f636b00000000000000006044820152606401610511565b6009810154156120d45760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f20756e6c6f636b60781b6044820152606401610511565b6001808201546001600160a01b03908116600090815260086020526040902091820154161580159061212057825433600090815260026020526040902061211a91611c8d565b5061213c565b825433600090815260036020526040902061213a91611c8d565b505b600383015460028301548110612158576000600284015561216e565b8083600201546121689190613a86565b60028401555b82600201546000036121bc5781156121a057600184015461219a906004906001600160a01b0316612aac565b506121bc565b60018401546121ba906006906001600160a01b0316612aac565b505b6009808501829055845460018601546001600160a01b0316600090815260209290925260409091206121ed91611c8d565b506001840154612207906001600160a01b03163383612ac1565b835460018501546040517fc6532367992b32e42a62dd89fc3574876d97d081a263aa6e030f34b79b7e6e8b9161224e916001600160a01b03909116903390869042906139e4565b60405180910390a250505050565b6000816060015160000361227257506000919050565b81606001518261012001511061228a57506000919050565b8160a0015142101561229e57506000919050565b8160e001516000036122b257506000919050565b60006122c983606001518460c00151612710612af1565b905060006122e38460600151856101000151612710612af1565b905060008460a00151421061232a5782828660e001518760a00151426123099190613a86565b6123139190613c7a565b61231d9190613c9c565b6123279190613a73565b90505b6000856060015182111561235457856101200151866060015161234d9190613a86565b9050612367565b6101208601516123649083613a86565b90505b95945050505050565b6000546001600160a01b03163314610bf05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610511565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606001600160a01b0385166124425760405162461bcd60e51b8152600401610511906139bd565b600061244e8888612ba0565b9050886000816001600160401b0381111561246b5761246b613325565b604051908082528060200260200182016040528015612494578160200160208202803683370190505b50905060005b828110156125f4576125188d8d838181106124b7576124b7613a0d565b90506020020160208101906124cc919061344d565b8a8a8e8e868181106124e0576124e0613a0d565b905060200201358b6000600481106124fa576124fa613a0d565b60209081029190910151908d015160408e015160608f01518e611a3a565b82828151811061252a5761252a613a0d565b60200260200101818152505081818151811061254857612548613a0d565b60200260200101517f694af1cc8727cdd0afbdd53d9b87b69248bd490224e9dd090e788546506e076f8a8f8f8581811061258457612584613a0d565b9050602002016020810190612599919061344d565b8e8e868181106125ab576125ab613a0d565b905060200201358b6000600481106125c5576125c5613a0d565b60200201516040516125da94939291906139e4565b60405180910390a2806125ec81613a99565b91505061249a565b5061260188333086611a86565b9b9a5050505050505050505050565b600080826001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561266d575060408051601f3d908101601f1916820190925261266a91810190613cb3565b60015b6126b95760405162461bcd60e51b815260206004820152601c60248201527f5468697320746f6b656e206973206e6f742061204c5020746f6b656e000000006044820152606401610511565b90506001600160a01b038116158015906126d857506126d88382612c43565b61064f5760405162461bcd60e51b815260206004820152601d60248201527f5468697320746f6b656e206973206e6f742061204c5020746f6b656e2e0000006044820152606401610511565b60006127368a8a898989898989612da6565b6001600160a01b038b16600090815260026020526040902090915061275b9082611c99565b5061276760048a613013565b506001600160a01b03808a16600090815260086020526040902080549091166127b75780546001600160a01b03808c166001600160a01b0319928316178355600183018054918c16919092161790555b8781600201546127c79190613a73565b60028201556001600160a01b038a1660009081526009602052604090206127ee9083611c99565b50509998505050505050505050565b600061280f8989898989898989612da6565b6001600160a01b038a1660009081526003602052604090209091506128349082611c99565b50612840600689613013565b506001600160a01b038089166000908152600860205260409020805490911661288a5780546001600160a01b038a166001600160a01b031991821617825560018201805490911690555b87816002015461289a9190613a73565b60028201556001600160a01b03891660009081526009602052604090206128c19083611c99565b505098975050505050505050565b6040516001600160a01b038085166024830152831660448201526064810182905261293a9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613028565b50505050565b600082600001828154811061295757612957613a0d565b9060005260206000200154905092915050565b60008181526001830160205260408120548015612a5357600061298e600183613a86565b85549091506000906129a290600190613a86565b9050818114612a075760008660000182815481106129c2576129c2613a0d565b90600052602060002001549050808760000184815481106129e5576129e5613a0d565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612a1857612a18613cd0565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061064f565b600091505061064f565b6000818152600183016020526040812054612aa45750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561064f565b50600061064f565b6000610923836001600160a01b03841661296a565b6040516001600160a01b038316602482015260448101829052610bb990849063a9059cbb60e01b90606401612903565b6000808060001985870985870292508281108382030391505080600003612b2b57838281612b2157612b21613c64565b0492505050610923565b808411612b3757600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080805b8381101561102257848482818110612bbf57612bbf613a0d565b90506020020135600003612c0b5760405162461bcd60e51b8152602060048201526013602482015272416d6f756e742063616e74206265207a65726f60681b6044820152606401610511565b848482818110612c1d57612c1d613a0d565b9050602002013582612c2f9190613a73565b915080612c3b81613a99565b915050612ba5565b6000808390506000836001600160a01b031663e6a43905836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cbc9190613cb3565b846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1e9190613cb3565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015612d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8d9190613cb3565b6001600160a01b03908116908616149250505092915050565b600154600090612dba90620f424090613a73565b60408051610160810182528281526001600160a01b03808c16602083019081528d8216938301938452606083018c8152426080850190815260a085018d815260c086018d815260e087018d815261010088018d815260006101208a018181526101408b018f815260018054808201825593528b51600b9093027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810193845599517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf78b018054918d166001600160a01b03199283161790559c517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88b01805491909c169d169c909c1790995595517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf988015593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa87015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb860155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc850155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe83015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff8201559251939450909283927fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0d0001906130039082613b8c565b5050505098975050505050505050565b6000610923836001600160a01b038416612a5d565b600061307d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130fa9092919063ffffffff16565b805190915015610bb9578080602001905181019061309b9190613ce6565b610bb95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610511565b60606131098484600085613111565b949350505050565b6060824710156131725760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610511565b6001600160a01b0385163b6131c95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610511565b600080866001600160a01b031685876040516131e59190613d03565b60006040518083038185875af1925050503d8060008114613222576040519150601f19603f3d011682016040523d82523d6000602084013e613227565b606091505b5091509150613237828286613242565b979650505050505050565b60608315613251575081610923565b8251156132615782518084602001fd5b8160405162461bcd60e51b81526004016105119190613d1f565b6040518061016001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6001600160a01b0381168114610df657600080fd5b8035613307816132e7565b919050565b8015158114610df657600080fd5b80356133078161330c565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261334c57600080fd5b81356001600160401b038082111561336657613366613325565b604051601f8301601f19908116603f0116810190828211818310171561338e5761338e613325565b816040528381528660208588010111156133a757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c087890312156133e057600080fd5b86356133eb816132e7565b955060208701356133fb816132e7565b9450604087013561340b8161330c565b9350606087013592506080870135915060a08701356001600160401b0381111561343457600080fd5b61344089828a0161333b565b9150509295509295509295565b60006020828403121561345f57600080fd5b8135610923816132e7565b60006020828403121561347c57600080fd5b5035919050565b60005b8381101561349e578181015183820152602001613486565b50506000910152565b600081518084526134bf816020860160208601613483565b601f01601f19169290920160200192915050565b60006101608251845260208301516134f660208601826001600160a01b03169052565b50604083015161351160408601826001600160a01b03169052565b50606083015160608501526080830151608085015260a083015160a085015260c083015160c085015260e083015160e0850152610100808401518186015250610120808401518186015250610140808401518282870152613574838701826134a7565b9695505050505050565b60208152600061092360208301846134d3565b6000806000606084860312156135a657600080fd5b83356135b1816132e7565b95602085013595506040909401359392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561361b57603f198886030184526136098583516134d3565b945092850192908501906001016135ed565b5092979650505050505050565b6000806040838503121561363b57600080fd5b82359150602083013561364d816132e7565b809150509250929050565b6000806040838503121561366b57600080fd5b8235613676816132e7565b946020939093013593505050565b6000806040838503121561369757600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561370a576136f783855180516001600160a01b03908116835260208083015190911690830152604090810151910152565b92840192606092909201916001016136c2565b50909695505050505050565b81516001600160a01b03908116825260208084015190911690820152604080830151908201526060810161064f565b60008060006060848603121561375a57600080fd5b505081359360208301359350604090920135919050565b60008060008060008060008060006101208a8c03121561379057600080fd5b893561379b816132e7565b985060208a01356137ab816132e7565b975060408a01356137bb8161330c565b965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a013591506101008a01356001600160401b038111156137fa57600080fd5b6138068c828d0161333b565b9150509295985092959850929598565b6000806040838503121561382957600080fd5b8235915060208301356001600160401b0381111561384657600080fd5b6138528582860161333b565b9150509250929050565b60008083601f84011261386e57600080fd5b5081356001600160401b0381111561388557600080fd5b6020830191508360208260051b85010111156138a057600080fd5b9250929050565b60008060008060008060008060008060006101208c8e0312156138c957600080fd5b6001600160401b03808d3511156138df57600080fd5b6138ec8e8e358f0161385c565b909c509a5060208d013581101561390257600080fd5b6139128e60208f01358f0161385c565b909a50985061392360408e016132fc565b975061393160608e0161331a565b965060808d0135955060a08d0135945060c08d0135935060e08d01359250806101008e0135111561396157600080fd5b506139738d6101008e01358e0161333b565b90509295989b509295989b9093969950565b6020808252825182820181905260009190848201906040850190845b8181101561370a578351835292840192918401916001016139a1565b6020808252600d908201526c24b73b30b634b2103a37b5b2b760991b604082015260600190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680613a3757607f821691505b602082108103613a5757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561064f5761064f613a5d565b8181038181111561064f5761064f613a5d565b600060018201613aab57613aab613a5d565b5060010190565b60208082526022908201527f596f7520617265206e6f7420746865206f776e6572206f662074686973206c6f604082015261636b60f01b606082015260800190565b60208082526032908201527f53756d206f66205447452062707320616e64206379636c652073686f756c642060408201527106265206c657373207468616e2031303030360741b606082015260800190565b601f821115610bb957600081815260208120601f850160051c81016020861015613b6d5750805b601f850160051c820191505b81811015611bd357828155600101613b79565b81516001600160401b03811115613ba557613ba5613325565b613bb981613bb38454613a23565b84613b46565b602080601f831160018114613bee5760008415613bd65750858301515b600019600386901b1c1916600185901b178555611bd3565b600085815260208120601f198616915b82811015613c1d57888601518255948401946001909101908401613bfe565b5085821015613c3b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215613c5d57600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082613c9757634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761064f5761064f613a5d565b600060208284031215613cc557600080fd5b8151610923816132e7565b634e487b7160e01b600052603160045260246000fd5b600060208284031215613cf857600080fd5b81516109238161330c565b60008251613d15818460208701613483565b9190910192915050565b60208152600061092360208301846134a756fea26469706673582212207291a28c1608cac4259566a11804e5e815241cd561f318247c8fc8d2b5d9f68c64736f6c63430008110033";

type CircleLockerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CircleLockerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CircleLocker__factory extends ContractFactory {
  constructor(...args: CircleLockerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CircleLocker> {
    return super.deploy(overrides || {}) as Promise<CircleLocker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CircleLocker {
    return super.attach(address) as CircleLocker;
  }
  override connect(signer: Signer): CircleLocker__factory {
    return super.connect(signer) as CircleLocker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircleLockerInterface {
    return new utils.Interface(_abi) as CircleLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CircleLocker {
    return new Contract(address, _abi, signerOrProvider) as CircleLocker;
  }
}
