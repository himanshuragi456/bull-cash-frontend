/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CirclePoolManager,
  CirclePoolManagerInterface,
} from "../../../../contracts/launchpad/PoolManager.sol/CirclePoolManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalParticipations",
        type: "uint256",
      },
    ],
    name: "ContributionUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolForTokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PrivatePoolForTokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "totalLocked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalRaised",
        type: "uint256",
      },
    ],
    name: "TvlChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "sender",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "addAdminPoolFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "factories",
        type: "address[]",
      },
    ],
    name: "addPoolFactories",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "addPoolFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raisedAmount",
        type: "uint256",
      },
    ],
    name: "addTopPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "bnbLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "decreaseTotalValueLocked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAllContributedPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getContributedPoolAtIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getCumulativePoolInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "poolState",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "poolType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalRaised",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hardCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "softCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minContribution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxContribution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityListingRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityUnlockTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "poolDetails",
            type: "string",
          },
        ],
        internalType: "struct CirclePoolManager.CumulativeLockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPoolAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getPoolAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getPoolsOf",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTopPool",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalRaised",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
        ],
        internalType: "struct CirclePoolManager.TopPoolInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTotalNumberOfContributedPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalNumberOfPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "getTotalNumberOfPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getUserContributedPoolInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "poolState",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "poolType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalRaised",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "hardCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "softCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minContribution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxContribution",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityListingRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityUnlockTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "poolDetails",
            type: "string",
          },
        ],
        internalType: "struct CirclePoolManager.CumulativeLockInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "increaseTotalValueLocked",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initializeTopPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "isPoolGenerated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "poolForToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
    ],
    name: "privatePoolForToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "recordContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "registerPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "registerPrivatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "removePoolFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "removePoolForToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "removePrivatePoolForToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    name: "removeTopPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLiquidityRaisedInBnb",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalParticipants",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValueLockedInBnb",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payaddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferAnyERC20Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061350b806100206000396000f3fe6080604052600436106102295760003560e01c80638da5cb5b11610123578063befaf8a6116100ab578063dc867b791161006f578063dc867b791461067b578063e9aae5361461069b578063f2fde38b146106bb578063f561f379146106db578063ff307122146106f057600080fd5b8063befaf8a6146105f0578063c39e5eb814610610578063cfddfc4c14610626578063d493b9ac14610646578063d88ff1f41461066657600080fd5b8063a939b81c116100f2578063a939b81c14610558578063ac1a393214610578578063ad36b16b14610598578063b93fbcbe146105b8578063bac5fd16146105ce57600080fd5b80638da5cb5b146104e457806393037672146105025780639495bc2b14610522578063a26dbf261461054257600080fd5b8063592081f3116101b15780637420c31f116101755780637420c31f1461043c5780637cbb6c5c1461046c5780638129fc1c1461049a57806387e56d04146104af5780638d7ec377146104cf57600080fd5b8063592081f3146103a75780635bcab5d9146103c7578063648755d2146103e7578063715018a61461040757806371f1aec41461041c57600080fd5b80632a33ca1e116101f85780632a33ca1e146102d45780632c3e3188146103015780633fd87cab1461032e5780634586223d1461034e5780634c8f65291461038757600080fd5b806305ea2183146102355780630d93a25d146102725780630f3101fd1461029457806326e54479146102b457600080fd5b3661023057005b600080fd5b34801561024157600080fd5b50610255610250366004612a30565b610710565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027e57600080fd5b5061029261028d366004612b21565b610723565b005b3480156102a057600080fd5b506102926102af366004612b81565b610809565b3480156102c057600080fd5b506102926102cf366004612bf5565b6108fd565b3480156102e057600080fd5b506102f46102ef366004612bf5565b610914565b6040516102699190612c12565b34801561030d57600080fd5b5061032161031c366004612c5f565b6109f2565b6040516102699190612ce4565b34801561033a57600080fd5b50610292610349366004612e4d565b6110e8565b34801561035a57600080fd5b50610255610369366004612bf5565b6001600160a01b039081166000908152606d60205260409020541690565b34801561039357600080fd5b506102926103a2366004612e9c565b611473565b3480156103b357600080fd5b506102556103c2366004612f35565b6114bb565b3480156103d357600080fd5b506102f46103e2366004612bf5565b6114de565b3480156103f357600080fd5b50610321610402366004612f53565b6115b4565b34801561041357600080fd5b50610292611c2e565b34801561042857600080fd5b50610292610437366004612bf5565b611c42565b34801561044857600080fd5b5061045c610457366004612bf5565b611dd7565b6040519015158152602001610269565b34801561047857600080fd5b5061048c610487366004612bf5565b611de4565b604051908152602001610269565b3480156104a657600080fd5b50610292611e05565b3480156104bb57600080fd5b506102926104ca366004612a30565b611f17565b3480156104db57600080fd5b50610292611fba565b3480156104f057600080fd5b506033546001600160a01b0316610255565b34801561050e57600080fd5b5061029261051d366004612a30565b612071565b34801561052e57600080fd5b5061029261053d366004612bf5565b61211c565b34801561054e57600080fd5b5061048c60725481565b34801561056457600080fd5b50610292610573366004612e4d565b61212f565b34801561058457600080fd5b50610255610593366004612f75565b612172565b3480156105a457600080fd5b506102926105b3366004612fb1565b6121a3565b3480156105c457600080fd5b5061048c60705481565b3480156105da57600080fd5b506105e3612282565b6040516102699190612ff2565b3480156105fc57600080fd5b5061029261060b36600461303d565b6122f7565b34801561061c57600080fd5b5061048c60715481565b34801561063257600080fd5b50610255610641366004612e4d565b61239b565b34801561065257600080fd5b5061029261066136600461306b565b6123bd565b34801561067257600080fd5b506102f461243e565b34801561068757600080fd5b50610292610696366004612bf5565b6124ed565b3480156106a757600080fd5b506102926106b636600461303d565b612535565b3480156106c757600080fd5b506102926106d6366004612bf5565b6125f0565b3480156106e757600080fd5b5061048c612666565b3480156106fc57600080fd5b5061048c61070b3660046130ac565b612677565b600061071d606783612692565b92915050565b6040513381526000805160206134b68339815191529060200160405180910390a161074f60653361269e565b6107745760405162461bcd60e51b815260040161076b906130c9565b60405180910390fd5b6000606e836040516107869190613100565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556107c1908390613100565b6040519081900381206001600160a01b0383168252907fe3f8ef74c29f8b9349d82d1dcee34e6238641b8196bde5690cd79f03b54b782b906020015b60405180910390a25050565b6040513381526000805160206134b68339815191529060200160405180910390a161083560653361269e565b6108515760405162461bcd60e51b815260040161076b906130c9565b61085c6067856126c0565b5060ff8116600090815260696020526040902061087990856126c0565b506001600160a01b0382166000908152606a6020526040902061089c90856126c0565b5083606e846040516108ae9190613100565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b03948516179055959091166000908152606c909152939093208054600260ff19909116179055505050565b6109056126d5565b61091060658261272f565b5050565b6001600160a01b0381166000908152606a602052604081206060919061093990612744565b90506000816001600160401b0381111561095557610955612a49565b60405190808252806020026020018201604052801561097e578160200160208202803683370190505b50905060005b828110156109ea576001600160a01b0385166000908152606a602052604090206109ae9082612692565b8282815181106109c0576109c061311c565b6001600160a01b0390921660209283029190910190910152806109e281613148565b915050610984565b509392505050565b6001600160a01b0383166000908152606b60205260409020606090610a1690612744565b8210610a4d576001600160a01b0384166000908152606b60205260409020600190610a4090612744565b610a4a9190613161565b91505b6000610a598484613161565b610a64906001613174565b90506000816001600160401b03811115610a8057610a80612a49565b604051908082528060200260200182016040528015610ab957816020015b610aa6612983565b815260200190600190039081610a9e5790505b509050600086865b8681116110db576001600160a01b0382166000908152606b60205260408120606c9190610aee9084612692565b6001600160a01b0316815260208101919091526040016000205460ff16600103610ded576001600160a01b0382166000908152606b6020526040812081908190819081908190610b3e9088612692565b6001600160a01b03166360246c886040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ba391908101906132a6565b955095509550955095509550604051806102600160405280610bcf89606761269290919063ffffffff16565b6001600160a01b03168152602001876001600160a01b0316815260200186600081518110610bff57610bff61311c565b602002602001015160ff16815260200186600181518110610c2257610c2261311c565b602002602001015160ff16815260200186600281518110610c4557610c4561311c565b602002602001015160ff16815260200185600081518110610c6857610c6861311c565b6020026020010151815260200185600181518110610c8857610c8861311c565b6020026020010151815260200185600281518110610ca857610ca861311c565b6020026020010151815260200185600381518110610cc857610cc861311c565b6020026020010151815260200185600481518110610ce857610ce861311c565b6020026020010151815260200185600581518110610d0857610d0861311c565b6020026020010151815260200185600681518110610d2857610d2861311c565b6020026020010151815260200185600781518110610d4857610d4861311c565b6020026020010151815260200185600881518110610d6857610d6861311c565b6020026020010151815260200185600981518110610d8857610d8861311c565b6020026020010151815260200185600a81518110610da857610da861311c565b60200260200101518152602001848152602001838152602001828152508a8a81518110610dd757610dd761311c565b60200260200101819052505050505050506110bb565b6001600160a01b0382166000908152606b60205260408120819081908190610e159086612692565b6001600160a01b03166360246c886040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e52573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e7a9190810190613386565b9350935093509350604051806102600160405280610ea287606761269290919063ffffffff16565b6001600160a01b0316815260200160006001600160a01b0316815260200185600081518110610ed357610ed361311c565b602002602001015160ff16815260200185600181518110610ef657610ef661311c565b602002602001015160ff16815260200185600281518110610f1957610f1961311c565b602002602001015160ff16815260200184600081518110610f3c57610f3c61311c565b6020026020010151815260200184600181518110610f5c57610f5c61311c565b6020026020010151815260200184600281518110610f7c57610f7c61311c565b6020026020010151815260200184600381518110610f9c57610f9c61311c565b6020026020010151815260200184600481518110610fbc57610fbc61311c565b6020026020010151815260200184600581518110610fdc57610fdc61311c565b6020026020010151815260200184600681518110610ffc57610ffc61311c565b602002602001015181526020018460078151811061101c5761101c61311c565b602002602001015181526020018460088151811061103c5761103c61311c565b602002602001015181526020018460098151811061105c5761105c61311c565b6020026020010151815260200184600a8151811061107c5761107c61311c565b60200260200101518152602001838152602001838152602001828152508888815181106110ab576110ab61311c565b6020026020010181905250505050505b826110c581613148565b93505080806110d390613148565b915050610ac1565b5091979650505050505050565b6040513381526000805160206134b68339815191529060200160405180910390a161111460653361269e565b6111305760405162461bcd60e51b815260040161076b906130c9565b606f6031815481106111445761114461311c565b9060005260206000209060020201600001548110610910576000805b603181101561123f5781806111ac5750836001600160a01b0316606f828154811061118d5761118d61311c565b60009182526020909120600160029092020101546001600160a01b0316145b1561122d57606f6111be826001613174565b815481106111ce576111ce61311c565b9060005260206000209060020201606f82815481106111ef576111ef61311c565b60009182526020909120825460029092020190815560019182015490820180546001600160a01b0319166001600160a01b0390921691909117905591505b8061123781613148565b915050611160565b506040805180820190915260008082526020820152606f805460319081106112695761126961311c565b6000918252602080832084516002939093020191825592830151600190910180546001600160a01b0319166001600160a01b0390921691909117905560408051808201909152818152918201819052915060005b603281101561146c57821580156112f8575083606f82815481106112e3576112e361311c565b90600052602060002090600202016000015411155b156113b257606f81815481106113105761131061311c565b6000918252602091829020604080518082018252600290930290910180548352600101546001600160a01b03908116838501528151808301909252878252881692810192909252606f8054919450908390811061136f5761136f61311c565b6000918252602091829020835160029290920201908155910151600191820180546001600160a01b0319166001600160a01b03909216919091179055925061145a565b821561145a576000829050606f82815481106113d0576113d061311c565b60009182526020918290206040805180820190915260029092020180548252600101546001600160a01b031691810191909152606f805491945082918490811061141c5761141c61311c565b6000918252602091829020835160029290920201908155910151600190910180546001600160a01b0319166001600160a01b03909216919091179055505b8061146481613148565b9150506112bd565b5050505050565b61147b6126d5565b60005b8151811015610910576114a982828151811061149c5761149c61311c565b60200260200101516124ed565b806114b381613148565b91505061147e565b60ff821660009081526069602052604081206114d79083612692565b9392505050565b6001600160a01b0381166000908152606b602052604081206060919061150390612744565b90506000816001600160401b0381111561151f5761151f612a49565b604051908082528060200260200182016040528015611548578160200160208202803683370190505b50905060005b828110156109ea576001600160a01b0385166000908152606b602052604090206115789082612692565b82828151811061158a5761158a61311c565b6001600160a01b0390921660209283029190910190910152806115ac81613148565b91505061154e565b60606115c06067612744565b82106115df5760016115d26067612744565b6115dc9190613161565b91505b60006115eb8484613161565b6115f6906001613174565b90506000816001600160401b0381111561161257611612612a49565b60405190808252806020026020018201604052801561164b57816020015b611638612983565b8152602001906001900390816116305790505b5090506000855b858111611c2357606c6000611668606784612692565b6001600160a01b0316815260208101919091526040016000205460ff1660010361194d576000808080808061169e606788612692565b6001600160a01b03166360246c886040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261170391908101906132a6565b95509550955095509550955060405180610260016040528061172f89606761269290919063ffffffff16565b6001600160a01b03168152602001876001600160a01b031681526020018660008151811061175f5761175f61311c565b602002602001015160ff168152602001866001815181106117825761178261311c565b602002602001015160ff168152602001866002815181106117a5576117a561311c565b602002602001015160ff168152602001856000815181106117c8576117c861311c565b60200260200101518152602001856001815181106117e8576117e861311c565b60200260200101518152602001856002815181106118085761180861311c565b60200260200101518152602001856003815181106118285761182861311c565b60200260200101518152602001856004815181106118485761184861311c565b60200260200101518152602001856005815181106118685761186861311c565b60200260200101518152602001856006815181106118885761188861311c565b60200260200101518152602001856007815181106118a8576118a861311c565b60200260200101518152602001856008815181106118c8576118c861311c565b60200260200101518152602001856009815181106118e8576118e861311c565b6020026020010151815260200185600a815181106119085761190861311c565b60200260200101518152602001848152602001838152602001828152508989815181106119375761193761311c565b6020026020010181905250505050505050611c03565b600080808061195d606786612692565b6001600160a01b03166360246c886040518163ffffffff1660e01b8152600401600060405180830381865afa15801561199a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119c29190810190613386565b93509350935093506040518061026001604052806119ea87606761269290919063ffffffff16565b6001600160a01b0316815260200160006001600160a01b0316815260200185600081518110611a1b57611a1b61311c565b602002602001015160ff16815260200185600181518110611a3e57611a3e61311c565b602002602001015160ff16815260200185600281518110611a6157611a6161311c565b602002602001015160ff16815260200184600081518110611a8457611a8461311c565b6020026020010151815260200184600181518110611aa457611aa461311c565b6020026020010151815260200184600281518110611ac457611ac461311c565b6020026020010151815260200184600381518110611ae457611ae461311c565b6020026020010151815260200184600481518110611b0457611b0461311c565b6020026020010151815260200184600581518110611b2457611b2461311c565b6020026020010151815260200184600681518110611b4457611b4461311c565b6020026020010151815260200184600781518110611b6457611b6461311c565b6020026020010151815260200184600881518110611b8457611b8461311c565b6020026020010151815260200184600981518110611ba457611ba461311c565b6020026020010151815260200184600a81518110611bc457611bc461311c565b6020026020010151815260200183815260200183815260200182815250878781518110611bf357611bf361311c565b6020026020010181905250505050505b81611c0d81613148565b9250508080611c1b90613148565b915050611652565b509095945050505050565b611c366126d5565b611c40600061274e565b565b6040513381526000805160206134b68339815191529060200160405180910390a1611c6e60653361269e565b611c8a5760405162461bcd60e51b815260040161076b906130c9565b6000805b6031811015611d6d578180611cda5750826001600160a01b0316606f8281548110611cbb57611cbb61311c565b60009182526020909120600160029092020101546001600160a01b0316145b15611d5b57606f611cec826001613174565b81548110611cfc57611cfc61311c565b9060005260206000209060020201606f8281548110611d1d57611d1d61311c565b60009182526020909120825460029092020190815560019182015490820180546001600160a01b0319166001600160a01b0390921691909117905591505b80611d6581613148565b915050611c8e565b506040805180820190915260008082526020820152606f80546031908110611d9757611d9761311c565b6000918252602091829020835160029290920201908155910151600190910180546001600160a01b0319166001600160a01b039092169190911790555050565b600061071d60678361269e565b6001600160a01b0381166000908152606b6020526040812061071d90612744565b600054610100900460ff1615808015611e255750600054600160ff909116105b80611e3f5750303b158015611e3f575060005460ff166001145b611ea25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161076b565b6000805460ff191660011790558015611ec5576000805461ff0019166101001790555b611ecd6127a0565b8015611f14576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b50565b6040513381526000805160206134b68339815191529060200160405180910390a1611f4360653361269e565b611f5f5760405162461bcd60e51b815260040161076b906130c9565b607054611f6c90826127cf565b607055607154611f7c90826127cf565b60718190556070546040517f4052bce1aee20a3f865eefe31853d77643cd71b6dbfa1cb8cc4fbbb7daf1ed5492611f0b928252602082015260400190565b611fc26126d5565b60005b6032811015611f145760408051808201909152600080825260208201818152606f8054600181018255925291517f39f2babe526038520877fc7c33d81accf578af4a06c5fa6b0d038cae36e1271160029092029182015590517f39f2babe526038520877fc7c33d81accf578af4a06c5fa6b0d038cae36e1271290910180546001600160a01b0319166001600160a01b039092169190911790558061206981613148565b915050611fc5565b6040513381526000805160206134b68339815191529060200160405180910390a161209d60653361269e565b6120b95760405162461bcd60e51b815260040161076b906130c9565b8060705410156120cd5760006070556120de565b6070546120da90826127db565b6070555b7f4052bce1aee20a3f865eefe31853d77643cd71b6dbfa1cb8cc4fbbb7daf1ed54607054607154604051611f0b929190918252602082015260400190565b6121246126d5565b6109106065826126c0565b6121376126d5565b6040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561216d573d6000803e3d6000fd5b505050565b6000606e826040516121849190613100565b908152604051908190036020019020546001600160a01b031692915050565b6040513381526000805160206134b68339815191529060200160405180910390a16121cf60653361269e565b6121eb5760405162461bcd60e51b815260040161076b906130c9565b6121f66067856126c0565b5060ff8116600090815260696020526040902061221390856126c0565b506001600160a01b0382166000908152606a6020526040902061223690856126c0565b5050506001600160a01b039081166000908152606d602090815260408083208054949095166001600160a01b03199094168417909455918152606c90915220805460ff19166001179055565b6060606f805480602002602001604051908101604052809291908181526020016000905b828210156122ee5760008481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b03168284015290835290920191016122a6565b50505050905090565b6040513381526000805160206134b68339815191529060200160405180910390a161232360653361269e565b61233f5760405162461bcd60e51b815260040161076b906130c9565b6001600160a01b038281166000818152606d602090815260409182902080546001600160a01b03191690559051928416835290917f85fc833af7e00290be25471afecae8dd163fdaf4bc910a76b2412436f16ad9f591016107fd565b6001600160a01b0382166000908152606b602052604081206114d79083612692565b6123c56126d5565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820183905283169063a9059cbb906044016020604051808303816000875af1158015612414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124389190613432565b50505050565b6060600061244c6067612744565b90506000816001600160401b0381111561246857612468612a49565b604051908082528060200260200182016040528015612491578160200160208202803683370190505b50905060005b828110156124e6576124aa606782612692565b8282815181106124bc576124bc61311c565b6001600160a01b0390921660209283029190910190910152806124de81613148565b915050612497565b5092915050565b6040513381526000805160206134b68339815191529060200160405180910390a161251960653361269e565b6121245760405162461bcd60e51b815260040161076b906130c9565b6040513381526000805160206134b68339815191529060200160405180910390a161256160653361269e565b61257d5760405162461bcd60e51b815260040161076b906130c9565b60725461258b9060016127cf565b6072556001600160a01b0382166000908152606b602052604090206125b090826126c0565b507f96d62f25518350ace6bbb1a985c6538769c45b92ee3bb0e861f4bd945145be056072546040516125e491815260200190565b60405180910390a15050565b6125f86126d5565b6001600160a01b03811661265d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161076b565b611f148161274e565b60006126726067612744565b905090565b60ff8116600090815260696020526040812061071d90612744565b60006114d783836127e7565b6001600160a01b038116600090815260018301602052604081205415156114d7565b60006114d7836001600160a01b038416612811565b6033546001600160a01b03163314611c405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161076b565b60006114d7836001600160a01b038416612860565b600061071d825490565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166127c75760405162461bcd60e51b815260040161076b90613454565b611c40612953565b60006114d78284613174565b60006114d78284613161565b60008260000182815481106127fe576127fe61311c565b9060005260206000200154905092915050565b60008181526001830160205260408120546128585750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561071d565b50600061071d565b60008181526001830160205260408120548015612949576000612884600183613161565b855490915060009061289890600190613161565b90508181146128fd5760008660000182815481106128b8576128b861311c565b90600052602060002001549050808760000184815481106128db576128db61311c565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061290e5761290e61349f565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061071d565b600091505061071d565b600054610100900460ff1661297a5760405162461bcd60e51b815260040161076b90613454565b611c403361274e565b60405180610260016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600060ff168152602001600060ff168152602001600060ff16815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016060815260200160608152602001606081525090565b600060208284031215612a4257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612a8757612a87612a49565b604052919050565b60006001600160401b03821115612aa857612aa8612a49565b50601f01601f191660200190565b600082601f830112612ac757600080fd5b8135612ada612ad582612a8f565b612a5f565b818152846020838601011115612aef57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b0381168114611f1457600080fd5b60008060408385031215612b3457600080fd5b82356001600160401b03811115612b4a57600080fd5b612b5685828601612ab6565b9250506020830135612b6781612b0c565b809150509250929050565b60ff81168114611f1457600080fd5b60008060008060808587031215612b9757600080fd5b8435612ba281612b0c565b935060208501356001600160401b03811115612bbd57600080fd5b612bc987828801612ab6565b9350506040850135612bda81612b0c565b91506060850135612bea81612b72565b939692955090935050565b600060208284031215612c0757600080fd5b81356114d781612b0c565b6020808252825182820181905260009190848201906040850190845b81811015612c535783516001600160a01b031683529284019291840191600101612c2e565b50909695505050505050565b600080600060608486031215612c7457600080fd5b8335612c7f81612b0c565b95602085013595506040909401359392505050565b60005b83811015612caf578181015183820152602001612c97565b50506000910152565b60008151808452612cd0816020860160208601612c94565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612e3f57603f19898403018552815180516001600160a01b0390811685528882015116888501528681015160ff908116888601526060808301518216908601526080808301519091169085015260a0808201519085015260c0808201519085015260e08082015190850152610100808201519085015261012080820151908501526101408082015190850152610160808201519085015261018080820151908501526101a080820151908501526101c080820151908501526101e08082015190850152610200808201516102608287018190529190612df083880182612cb8565b925050506102208083015186830382880152612e0c8382612cb8565b925050506102408083015192508582038187015250612e2b8183612cb8565b968901969450505090860190600101612d0b565b509098975050505050505050565b60008060408385031215612e6057600080fd5b8235612e6b81612b0c565b946020939093013593505050565b60006001600160401b03821115612e9257612e92612a49565b5060051b60200190565b60006020808385031215612eaf57600080fd5b82356001600160401b03811115612ec557600080fd5b8301601f81018513612ed657600080fd5b8035612ee4612ad582612e79565b81815260059190911b82018301908381019087831115612f0357600080fd5b928401925b82841015612f2a578335612f1b81612b0c565b82529284019290840190612f08565b979650505050505050565b60008060408385031215612f4857600080fd5b8235612e6b81612b72565b60008060408385031215612f6657600080fd5b50508035926020909101359150565b600060208284031215612f8757600080fd5b81356001600160401b03811115612f9d57600080fd5b612fa984828501612ab6565b949350505050565b60008060008060808587031215612fc757600080fd5b8435612fd281612b0c565b93506020850135612fe281612b0c565b92506040850135612bda81612b0c565b602080825282518282018190526000919060409081850190868401855b828110156110db578151805185528601516001600160a01b031686850152928401929085019060010161300f565b6000806040838503121561305057600080fd5b823561305b81612b0c565b91506020830135612b6781612b0c565b60008060006060848603121561308057600080fd5b833561308b81612b0c565b9250602084013561309b81612b0c565b929592945050506040919091013590565b6000602082840312156130be57600080fd5b81356114d781612b72565b60208082526019908201527f4e6f7420612077686974656c697374656420666163746f727900000000000000604082015260600190565b60008251613112818460208701612c94565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161315a5761315a613132565b5060010190565b8181038181111561071d5761071d613132565b8082018082111561071d5761071d613132565b805161319281612b0c565b919050565b600082601f8301126131a857600080fd5b815160206131b8612ad583612e79565b82815260059290921b840181019181810190868411156131d757600080fd5b8286015b848110156131fb5780516131ee81612b72565b83529183019183016131db565b509695505050505050565b600082601f83011261321757600080fd5b81516020613227612ad583612e79565b82815260059290921b8401810191818101908684111561324657600080fd5b8286015b848110156131fb578051835291830191830161324a565b600082601f83011261327257600080fd5b8151613280612ad582612a8f565b81815284602083860101111561329557600080fd5b612fa9826020830160208701612c94565b60008060008060008060c087890312156132bf57600080fd5b6132c887613187565b955060208701516001600160401b03808211156132e457600080fd5b6132f08a838b01613197565b9650604089015191508082111561330657600080fd5b6133128a838b01613206565b9550606089015191508082111561332857600080fd5b6133348a838b01613261565b9450608089015191508082111561334a57600080fd5b6133568a838b01613261565b935060a089015191508082111561336c57600080fd5b5061337989828a01613261565b9150509295509295509295565b6000806000806080858703121561339c57600080fd5b84516001600160401b03808211156133b357600080fd5b6133bf88838901613197565b955060208701519150808211156133d557600080fd5b6133e188838901613206565b945060408701519150808211156133f757600080fd5b61340388838901613261565b9350606087015191508082111561341957600080fd5b5061342687828801613261565b91505092959194509250565b60006020828403121561344457600080fd5b815180151581146114d757600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603160045260246000fdfeb212c8921883707806054134691af4baf7a0b0821e5e930788fe27f6bdfb2068a2646970667358221220aac49a831c4b963793d4a494dcfed4629c53e0626030a18eae53ca63691653a964736f6c63430008110033";

type CirclePoolManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CirclePoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CirclePoolManager__factory extends ContractFactory {
  constructor(...args: CirclePoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CirclePoolManager> {
    return super.deploy(overrides || {}) as Promise<CirclePoolManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CirclePoolManager {
    return super.attach(address) as CirclePoolManager;
  }
  override connect(signer: Signer): CirclePoolManager__factory {
    return super.connect(signer) as CirclePoolManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CirclePoolManagerInterface {
    return new utils.Interface(_abi) as CirclePoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CirclePoolManager {
    return new Contract(address, _abi, signerOrProvider) as CirclePoolManager;
  }
}
