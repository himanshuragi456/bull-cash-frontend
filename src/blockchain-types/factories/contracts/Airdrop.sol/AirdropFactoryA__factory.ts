/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AirdropFactoryA,
  AirdropFactoryAInterface,
} from "../../../contracts/Airdrop.sol/AirdropFactoryA";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_ALLOCATIONS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "claimTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "logo",
            type: "string",
          },
          {
            internalType: "string",
            name: "website",
            type: "string",
          },
          {
            internalType: "string",
            name: "facebook",
            type: "string",
          },
          {
            internalType: "string",
            name: "twitter",
            type: "string",
          },
          {
            internalType: "string",
            name: "github",
            type: "string",
          },
          {
            internalType: "string",
            name: "telegram",
            type: "string",
          },
          {
            internalType: "string",
            name: "instagram",
            type: "string",
          },
          {
            internalType: "string",
            name: "discord",
            type: "string",
          },
          {
            internalType: "string",
            name: "reddit",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct AirdropFactoryA.Social",
        name: "_social",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "first_release",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle_release",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cycle_period",
            type: "uint256",
          },
        ],
        internalType: "struct AirdropFactoryA.Vesting",
        name: "vesting",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "starts_at",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_allocations",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "createAirdrop",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "removeAllAllocations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_allocations",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "setAllocations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type AirdropFactoryAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropFactoryAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirdropFactoryA__factory extends ContractFactory {
  constructor(...args: AirdropFactoryAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AirdropFactoryA> {
    return super.deploy(overrides || {}) as Promise<AirdropFactoryA>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AirdropFactoryA {
    return super.attach(address) as AirdropFactoryA;
  }
  override connect(signer: Signer): AirdropFactoryA__factory {
    return super.connect(signer) as AirdropFactoryA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropFactoryAInterface {
    return new utils.Interface(_abi) as AirdropFactoryAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AirdropFactoryA {
    return new Contract(address, _abi, signerOrProvider) as AirdropFactoryA;
  }
}
